<?php

/**
 * Implements hook_feeds_plugins().
 */
function csv2fields_feeds_plugins() {
  $info = array();
  $info['FeedsEntityStructureProcessor'] = array(
    'name' => 'Entity Structure Processor',
    'description' => 'Scaffolds entity structure.',
    'handler' => array(
      'parent' => 'FeedsProcessor', // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'FeedsEntityStructureProcessor',
      'file' => 'plugins/FeedsEntityStructureProcessor.inc',
      'path' => drupal_get_path('module', 'csv2fields'),
    ),
  );
  return $info;
}

/**
 * Implements hook_csv2fields_field_base_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_base_field_name_alter(&$final_field_data, &$field_data) {
  $field_name = $field_data['field_name'];
  $field_name = str_replace(' ', '_', strtolower($field_name));
  $final_field_data['field_name'] = $field_name;
}

/**
 * Implements hook_csv2fields_field_base_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_base_type_alter(&$final_field_data, &$field_data) {
  $final_field_data['type'] = $field_data['type'];
}

/**
 * Implements hook_csv2fields_field_base_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_base_cardinality_alter(&$final_field_data, &$field_data) {
  if (!isset($field_data['cardinality'])) {
    return 1;
  }
  if (intval($field_data['cardinality'])) {
    $final_field_data['cardinality'] = $field_data['cardinality'];
  }
  elseif (strtolower(substr($field_data['cardinality'], 0, 3)) == 'inf') {
    $final_field_data['cardinality'] = -1;
  }
  else {
    $final_field_data['cardinality'] = 1;
  }
}

/**
 * Implements hook_csv2fields_field_base_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_base_allowed_values_alter(&$final_field_data, &$field_data) {
  if ($field_data['allowed_values']) {
    $options = str_getcsv($field_data['allowed_values']);

    $options = array_map('trim', $options);
    $options = array_combine($options, $options);
    $final_field_data['settings']['allowed_values'] = $options;
    $final_field_data['settings']['allowed_values_function'] = '';

  }
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_label_alter(&$final_field_data, &$field_data) {
  $final_field_data['label'] = $field_data['label'];
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_default_value_alter(&$final_field_data, &$field_data) {
  // We can use truthy values here since 0, '', and FALSE are the defaults anyway.
  if (!empty($field_data['default_value'])) {
    $values = str_getcsv($field_data['default_value']);
    $values = array_map(function($value) {
      return array('value' => $value);
    }, $values);
    $final_field_data['default_value'] = $values;
  }
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_required_alter(&$final_field_data, &$field_data) {
  $final_field_data['required'] = $field_data['required'];
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_description_alter(&$final_field_data, &$field_data) {
  $final_field_data['description'] = $field_data['description'];
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_settings_prefix_alter(&$final_field_data, &$field_data) {
  $final_field_data['settings']['prefix'] = $field_data['settings_prefix'];
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_prefix_alter(&$final_field_data, &$field_data) {
  $field_data['settings_prefix'] = $field_data['prefix'];
  csv2fields_csv2fields_field_instance_settings_prefix_alter($final_field_data, $field_data);
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_settings_suffix_alter(&$final_field_data, &$field_data) {
  $final_field_data['settings']['suffix'] = $field_data['settings_suffix'];
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_suffix_alter(&$final_field_data, &$field_data) {
  $field_data['settings_suffix'] = $field_data['suffix'];
  csv2fields_csv2fields_field_instance_settings_suffix_alter($final_field_data, $field_data);
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_settings_text_processing_alter(&$final_field_data, &$field_data) {
  if ($field_data['type'] == 'text_long') {
    $final_field_data['settings']['text_processing'] = $field_data['settings_text_processing'];
  }
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_filter_text_alter(&$final_field_data, &$field_data) {
  $field_data['settings_text_processing'] = $field_data['filter_text'];
  csv2fields_csv2fields_field_instance_settings_text_processing_alter($final_field_data, $field_data);
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_widget_type_alter(&$final_field_data, &$field_data) {
  if ($widget_type = $field_data['widget_type']) {
    $final_field_data['widget']['type'] = $widget_type;
  }
}

/**
 * Implements hook_csv2fields_field_instance_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_field_instance_widget_weight_alter(&$final_field_data, &$field_data) {
  $final_field_data['widget']['weight'] = $field_data['widget_weight'];
}

/**
 * Implements hook_csv2fields_field_instance_alter().
 */
function csv2fields_csv2fields_field_instance_alter(&$final_field_data, &$field_data) {
  if (!isset($final_field_data['widget']['weight']) || $final_field_data['widget']['weight'] == '') {
    $final_field_data['widget']['weight'] = $field_data['row_number'];
  }
}

/**
 * Implements hook_csv2fields_group_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_group_label_alter(&$final_group_data, &$group_data) {
  $final_group_data['label'] = $group_data['label'];
}

/**
 * Implements hook_csv2fields_group_HEADER_NAME_alter().
 */
function csv2fields_csv2fields_group_widget_weight_alter(&$final_group_data, &$group_data) {
  $final_group_data['widget']['weight'] = $group_data['widget_weight'];
}

/**
 * Implements hook_csv2fields_group_alter().
 */
function csv2fields_csv2fields_group_alter(&$final_group_data, &$group_data) {
  if (!isset($final_group_data['widget']['weight']) || $final_group_data['widget']['weight'] == '') {
    $final_group_data['widget']['weight'] = $group_data['row_number'];
  }
}

function csv2fields_bundle_callback($form, $form_state) {
  watchdog('derp', 'meow', array(), WATCHDOG_NOTICE, 'link');
  $form_state['rebuild'] = TRUE;
  return $form['container'];
}
